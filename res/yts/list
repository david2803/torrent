#import "skin://theme.view"
#import "skin://styles/style_list.view"

//$view.rightPaneExpansion = scurve($view.showRightPane, 0.3);

widget(container_z, {

  widget(container_x, {

    widget(container_z, {
      filterConstraintX: true;
      widget(list_y, {
        id: "scrollable";
        navWrap: true;
        chaseFocus: true;

        clipOffsetTop: 3em;
        scrollThresholdTop: 4em;

        scrollThresholdBottom: $ui.universeBottomHeight + 2em;
        clipOffsetBottom: $ui.universeBottomHeight;
        clipAlpha: 0.2;
        clipBlur: 1;

        cloner($self.model.nodes, loader, {
          onEvent(copy, deliverRef($core.clipboard.setFromItem, $self));
          selectOnFocus: true;
          selectOnHover: true;
          time: 0.1;
          effect: blend;
          noInitialTransform: true;
          alt: "default.view";
          source: $self.type + ".view";
        });

        widget(loader, {
          autohide: true;
          noInitialTransform: true;
          source: select($self.model.mayadd, "skin://items/list/add.view", "");
        });
      });

      ScrollBar("scrollable", 3em, $ui.universeBottomHeight);
    });

    widget(expander_x, {
	  hidden: select($ui.aspect > 1, 0, 1);
      expansion: iir(delay(select($view.expanded, 1.0, 0.0), 0.1, 1.0), 4);
      alwaysLayout: true;
      widget(deck, {
        width: $ui.width / 2.5;

        effect: blend;//slideVertical;
        time: 0.2;
        noInitialTransform: false;

        keepPreviousActive: true;
        keepNextActive: true;
        preloadedAreVisible: true;

        cloner($self.model.nodes, loader, {
          time: 0.1;
          effect: blend;
          noInitialTransform: true;
          source: select(isVisible(),
                         "details_" + $self.type + ".view",
                         void);
          alt: "skin://items/details/nothing.view";
        });
      });
    });
  });
  widget(container_y, {
    align: top;
    PageHeader($self.model.metadata.title);
  });
});
